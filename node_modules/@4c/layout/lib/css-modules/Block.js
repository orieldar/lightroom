"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _LayoutModule = _interopRequireDefault(require("./Layout.module.css"));

var _PropTypes = require("../PropTypes");

var _camelCase = _interopRequireDefault(require("./camelCase"));

/* eslint-disable react/prop-types */
function Block(_ref, ref) {
  let {
    className,
    style,
    inline,
    alignSelf,
    grow,
    flex,
    as: Component,
    direction: _1,
    align: _2,
    justify: _3
  } = _ref,
      props = (0, _objectWithoutProperties2.default)(_ref, ["className", "style", "inline", "alignSelf", "grow", "flex", "as", "direction", "align", "justify"]);
  const combinedStyle = style || flex != null ? (0, _extends2.default)({}, style, {
    flex: flex === true ? 1 : flex
  }) : style;
  return _react.default.createElement(Component, (0, _extends2.default)({}, props, {
    ref: ref,
    style: combinedStyle,
    className: (0, _classnames.default)(className, inline ? _LayoutModule.default.blockInline : _LayoutModule.default.block, grow && _LayoutModule.default.grow, alignSelf && _LayoutModule.default[(0, _camelCase.default)(alignSelf)])
  }));
}

const DecoratedBlock = _react.default.forwardRef(Block);

DecoratedBlock.propTypes = _PropTypes.propTypes;
DecoratedBlock.defaultProps = _PropTypes.defaultProps;
var _default = DecoratedBlock;
exports.default = _default;